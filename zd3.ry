import os
import signal

def adressa():
    adr="~/home/" + os.getlogin()
    return adr

def signali_zadatka3():

    fail=open(adressa() + 'stack1.txt','w')
    fail+=str(os.getpid()) + '  PID processa\n'+ str(os.getppid()) +' Pid rodetelja processa\n'
    fail+=os.execlp('ps','-lp ' + str(os.getppid()))
    fail.close()
    return


flag =0
while(flag):
    print('Unesite broj signala. ')
    print ('Imajte na umu da ce naredbe 1-8 biti zanamarene.')

    komanda = input()

    if type(komanda) is type(int):
        print('Unesine su netocni znakovi. Molim koristite samo brojeve.')
        continue
    elif (not(komanda < 32)):
        print('Programa podrzava rad samo sa signalama u deapazonu 1-31. Molim vas probajte ponovno.')
        continue
    elif (komanda==14 or komanda==15):
        print('Komanda', komanda, 'prihvacena za izvrsenje.')
        os.kill(os.gitpid(),komanda)
        print('Podatke sejvane u fail stack1.txt po adresu', adressa())
        break
    else:
        os.kill(os.getpid(),komanda)
        break




#--------------------------------------------------------------------------------- blok ignoriranje signlova pod brojavama 1-8
signal.signal(signal.SIGHUP, signal.SIG_IGN)
signal.signal(signal.SIGINT, signal.SIG_IGN)
signal.signal(signal.SIGQUIT, signal.SIG_IGN)
signal.signal(signal.SIGILL, signal.SIG_IGN)
signal.signal(signal.SIGTRAP, signal.SIG_IGN)
signal.signal(signal.SIGABRT, signal.SIG_IGN)
signal.signal(signal.SIGBUS, signal.SIG_IGN)
signal.signal(signal.SIGFPE, signal.SIG_IGN)

#--------------------------------------------------------------------------------------------- blok odradene signala 9-13, 16-31 po difoltu

signal.signal(signal.SIGKILL, signal.SIG_DFL)

signal.signal(signal.SIGUSR1, signal.SIG_DFL)
signal.signal(signal.SIGSEGV, signal.SIG_DFL)
signal.signal(signal.SIGUSR2, signal.SIG_DFL)
signal.signal(signal.SIGPIPE, signal.SIG_DFL)
signal.signal(signal.SIGSTKFLG, signal.SIG_DFL)
signal.signal(signal.SIGCHLD, signal.SIG_DFL)
signal.signal(signal.SIGCONT, signal.SIG_DFL)
signal.signal(signal.SIGSTOP, signal.SIG_DFL)
signal.signal(signal.SIGTSTP, signal.SIG_DFL)
signal.signal(signal.SIGTTIN, signal.SIG_DFL)
signal.signal(signal.SIGTTOU, signal.SIG_DFL)
signal.signal(signal.SIGURG, signal.SIG_DFL)
signal.signal(signal.SIGXCPU, signal.SIG_DFL)
signal.signal(signal.SIGXFSZ, signal.SIG_DFL)
signal.signal(signal.SIGVTALRM, signal.SIG_DFL)
signal.signal(signal.SIGPROF, signal.SIG_DFL)
signal.signal(signal.SIGWINCH, signal.SIG_DFL)
signal.signal(signal.SIGIO, signal.SIG_DFL)
signal.signal(signal.SIGPWR, signal.SIG_DFL)
signal.signal(signal.SIGSYS, signal.SIG_DFL)

#----------------------------------------------------------------------------------------------- odrada signala 14 i 15
signal.signal(signal.SIGALRM,  signali_zadatka3)
signal.signal(signal.SIGTERM,  signali_zadatka3)

